# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-01-14 16:34
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Access_to_server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Access_to_service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Access_to_switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=20, null=True)),
                ('hostname', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=50, null=True)),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switch_port_id', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_num', models.IntegerField(null=True)),
                ('cabinet_num', models.IntegerField(null=True)),
                ('spec', models.CharField(max_length=300, null=True)),
                ('brand_and_model', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Server_account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, null=True)),
                ('privilege', models.CharField(max_length=50, null=True)),
                ('password', models.CharField(max_length=50, null=True)),
                ('personnel_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.Personnel')),
                ('server_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Server')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('port_id', models.IntegerField(null=True)),
                ('interface_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Interface')),
                ('server_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Server')),
            ],
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=20, null=True)),
                ('slot_num', models.IntegerField(null=True)),
                ('brand_and_model', models.CharField(max_length=100, null=True)),
                ('cabinet_num', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Switch_account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, null=True)),
                ('privilege', models.CharField(max_length=50, null=True)),
                ('password', models.CharField(max_length=50, null=True)),
                ('personnel_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.Personnel')),
                ('switch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Switch')),
            ],
        ),
        migrations.CreateModel(
            name='Vlan_to_interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_id', models.IntegerField(null=True)),
                ('interface_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Interface')),
            ],
        ),
        migrations.AddField(
            model_name='port',
            name='switch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Switch'),
        ),
        migrations.AddField(
            model_name='interface',
            name='port_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Port'),
        ),
        migrations.AddField(
            model_name='interface',
            name='server_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Server'),
        ),
        migrations.AddField(
            model_name='interface',
            name='service_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Service'),
        ),
        migrations.AddField(
            model_name='access_to_switch',
            name='switch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Switch'),
        ),
        migrations.AddField(
            model_name='access_to_switch',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Switch_account'),
        ),
        migrations.AddField(
            model_name='access_to_service',
            name='service_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Service'),
        ),
        migrations.AddField(
            model_name='access_to_service',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Server_account'),
        ),
        migrations.AddField(
            model_name='access_to_server',
            name='server_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Server'),
        ),
        migrations.AddField(
            model_name='access_to_server',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Server_account'),
        ),
        migrations.AlterUniqueTogether(
            name='vlan_to_interface',
            unique_together=set([('vlan_id', 'interface_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='access_to_switch',
            unique_together=set([('username', 'switch_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='access_to_service',
            unique_together=set([('username', 'service_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='access_to_server',
            unique_together=set([('username', 'server_id')]),
        ),
    ]
